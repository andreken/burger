{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElem","elemType","a","createElement","Object","assign","className","classes","InputElem","elemConfig","value","onChange","changed","options","map","opt","key","name","Input","Label","label","Span","style","visibility","valid","module","exports","Auth","connect","state","loading","auth","error","isAuthenticated","token","buildingBurger","burgerBuilder","building","authRedirectPath","dispatch","onAuth","mail","psw","mode","actions","onSetAuthRedirectPath","_useState","useState","email","type","placeholder","validation","required","isEmail","password","minLength","_useState2","C_Users_andre_projects_burger_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","controls","setControls","_useState3","_useState4","isSignup","setIsSignup","useEffect","formElementsArray","push","id","config","form","formElement","react__WEBPACK_IMPORTED_MODULE_2___default","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_5__","e","event","inputId","controlsUpd","updateObject","C_Users_andre_projects_burger_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","inputChangedHandler","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_7__","errorMessage","message","authRedirect","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","to","onSubmit","preventDefault","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_6__","btnType","clicked"],"mappings":"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","file":"static/js/3.b803de00.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Input.module.css'\r\n\r\nconst input = (props) => {\r\n\r\n\tlet inputElem = null;\r\n\tswitch(props.elemType){\r\n\t\tcase('input'):\r\n\t\t\tinputElem = <input className={classes.InputElem} \r\n\t\t\t\t{...props.elemConfig} value={props.value} \r\n\t\t\t\tonChange={props.changed}/>\r\n\t\t\tbreak;\r\n\t\tcase('textarea'):\r\n\t\t\tinputElem = <textarea className={classes.InputElem} \r\n\t\t\t\t{...props.elemConfig} value={props.value} \r\n\t\t\t\tonChange={props.changed}/>\r\n\t\t\tbreak;\r\n\t\tcase('select'):\r\n\t\t\tinputElem = <select className={classes.InputElem} \r\n\t\t\t\tvalue={props.value} \r\n\t\t\t\tonChange={props.changed}>\r\n\t\t\t\t\t{ props.elemConfig.options.map(opt => {\r\n\t\t\t\t\t\t\treturn <option key={opt.value} value={opt.value}>{opt.name}</option>\r\n\t\t\t\t\t\t}) }\r\n\t\t\t\t</select>\t\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tinputElem = <input className={classes.InputElem} \r\n\t\t\t\t{...props.elemConfig} value={props.value}\t/>\t\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.Input}>\r\n\t\t\t<label className={classes.Label}>{props.label}</label>\r\n\t\t\t{ inputElem }\r\n\t\t\t<span className={classes.Span} style={{ visibility: props.valid ? 'hidden' : 'visible' }} >\r\n\t\t\t\tPlease insert a valid value</span>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default input","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1Au9r\",\"Label\":\"Input_Label__3xUx6\",\"InputElem\":\"Input_InputElem__QTjQ5\",\"Span\":\"Input_Span__2BogD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2f2t9\"};","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Auth.module.css'\r\nimport * as actions from '../../store/actions/index'\r\nimport {updateObject,checkValidity} from '../../shared/utility'\r\n\r\n// Converted from class to functional component with react hooks\r\nconst auth = props => {\r\n\r\n\tconst [controls, setControls] = useState({\r\n\t\t\temail: {\r\n\t\t\t\telemType: 'input',\r\n\t\t\t\telemConfig: {\r\n\t\t\t\t\ttype: 'email',\r\n\t\t\t\t\tplaceholder: 'Mail address'\r\n\t\t\t\t},\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tisEmail: true\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\tvalue: ''\r\n\t\t\t},\r\n\t\t\tpassword: {\r\n\t\t\t\telemType: 'input',\r\n\t\t\t\telemConfig: {\r\n\t\t\t\t\ttype: 'password',\r\n\t\t\t\t\tplaceholder: 'Password'\r\n\t\t\t\t},\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tminLength: 6\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\tvalue: ''\r\n\t\t\t}\r\n\t});\r\n\tconst [isSignup, setIsSignup] = useState(true)\r\n\r\n\t// Reset path when we reach this page\r\n\t// while not building a burger\r\n\t// componentDidMount(){\r\n\t// \tif(!this.props.buildingBurger && this.props.authRedirectPath !== '/'){\r\n\t// \t\tthis.props.onSetAuthRedirectPath();\r\n\t// \t}\r\n\t// }\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!props.buildingBurger && props.authRedirectPath !== '/'){\r\n\t\t\tprops.onSetAuthRedirectPath();\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst inputChangedHandler = (event, inputId) => {\r\n\t\t// Create a clone of controls object\r\n\t\t// Also create a clone of the object that represent the form element changed\r\n\t\tconst controlsUpd = updateObject(controls, {\r\n\t\t\t[inputId]: updateObject(controls[inputId], {\r\n\t\t\t\tvalue: event.target.value,\r\n\t\t\t\tvalid: checkValidity(event.target.value, controls[inputId].validation)\r\n\t\t\t})\r\n\t\t})\r\n\t\t// this.setState({\r\n\t\t// \tcontrols: controls\r\n\t\t// \t// formIsValid: formIsValid\r\n\t\t// })\r\n\t\tsetControls(controlsUpd)\r\n\t}\r\n\r\n\tconst submitHandler = (event) => {\r\n\t\tconst { email, password } = controls\r\n\t\tconst mode = isSignup ? 'UP' : 'IN'\r\n\t\t// Prevent page reload\r\n\t\tevent.preventDefault();\r\n\t\tprops.onAuth(email.value, password.value, mode)\r\n\t}\r\n\r\n\tconst switchAuthModeHandler = () => {\r\n\t\t// this.setState(prevState => {\r\n\t\t// \treturn {\r\n\t\t// \t\tisSignup: !prevState.isSignup\r\n\t\t// \t}\r\n\t\t// })\r\n\t\tsetIsSignup(!isSignup)\r\n\t}\r\n\r\n\t// Create an array of javascript objects\r\n\tconst formElementsArray = [];\r\n\tfor(let key in controls) {\r\n\t\tformElementsArray.push({\r\n\t\t\tid: key,\r\n\t\t\tconfig: controls[key]\r\n\t\t})\r\n\t}\r\n\t// Create form input elements\r\n\tlet form = formElementsArray.map(formElement => {\r\n\t\treturn <Input \r\n\t\t\tkey={formElement.id}\r\n\t\t\telemType={formElement.config.elemType}\r\n\t\t\telemConfig={formElement.config.elemConfig}\r\n\t\t\tvalue={formElement.config.value}\r\n\t\t\tvalid={formElement.config.valid}\r\n\t\t\tchanged={(e) => inputChangedHandler(e,formElement.id)}\r\n\t\t/>\r\n\t})\r\n\r\n\t// If loading (signin/signup) show spinner\r\n\tif(props.loading){\r\n\t\tform = <Spinner />\r\n\t}\r\n\r\n\t// Output error if exists\r\n\tlet errorMessage = null;\r\n\tif(props.error){\r\n\t\terrorMessage = (\r\n\t\t\t<p>{props.error.message}</p>\r\n\t\t)\r\n\t}\r\n\r\n\t// Redirect to home when authenticated\r\n\t// Because the current path is no more visible\r\n\tlet authRedirect = null;\r\n\tif(props.isAuthenticated){\r\n\t\tauthRedirect = <Redirect to={props.authRedirectPath} />\r\n\t}\r\n\r\n\t// return form\r\n\treturn (\r\n\t\t<div className={classes.Auth}>\r\n\t\t\t{ authRedirect }\r\n\t\t\t{ errorMessage }\r\n\t\t\t<form onSubmit={submitHandler} >\r\n\t\t\t\t{ form }\r\n\t\t\t\t<Button btnType=\"Success\">SUBMIT</Button>\r\n\t\t\t</form>\r\n\t\t\t<Button \r\n\t\t\t\tclicked={switchAuthModeHandler}\r\n\t\t\t\tbtnType=\"Danger\" >\r\n\t\t\t\tSWITCH TO {isSignup ? 'SIGNIN' : 'SIGNUP'}\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tloading: state.auth.loading,\r\n\t\terror: state.auth.error,\r\n\t\tisAuthenticated: state.auth.token !== null,\r\n\t\tbuildingBurger: state.burgerBuilder.building,\r\n\t\tauthRedirectPath: state.auth.authRedirectPath\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonAuth: (mail, psw, mode) => dispatch(actions.auth(mail, psw, mode)),\r\n\t\tonSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(auth);"],"sourceRoot":""}