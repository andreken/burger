{"version":3,"sources":["shared/utility.js","components/Logo/Logo.js","components/Navigation/NavItems/NavItem/NavItem.js","components/Navigation/NavItems/NavItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","store/sagas/auth.js","store/sagas/burgerBuilder.js","store/sagas/order.js","store/sagas/index.js","index.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","store/actions/actionTypes.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Navigation/NavItems/NavItem/NavItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","hooks/http-error-handler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","containers/Layout/Layout.module.css","components/Navigation/Toolbar/Toolbar.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavItems/NavItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/index.js"],"names":["updateObject","oldObj","newProps","Object","C_Users_andre_projects_burger_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","checkValidity","value","rules","required","trim","minLength","length","maxLength","isEmail","test","logo","props","react_default","a","createElement","className","classes","Logo","src","burgerLogo","alt","navItem","NavItem","NavLink","to","link","exact","activeClassName","active","children","navItems","NavItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","style","height","isAuth","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Fragment","Backdrop","show","closed","join","marginBottom","connect","state","auth","token","_useState","useState","_useState2","slicedToArray","setSideDrawer","Content","buildControl","BuildControl","Label","label","Less","removeIngredient","type","disabled","More","addIngredient","controls","buildControls","BuildControls","price","toFixed","map","el","key","OrderButton","purchasable","ordered","orderSummary","ingredientSummary","keys","ingredients","igKey","textTransform","Button","btnType","purchaseCanceled","purchaseContinued","ings","burgerBuilder","totalPrice","error","dispatch","onIngredientAdded","ingName","actions","onIngredientRemoved","onInitIngredients","onInitPurchase","onSetAuthRedirectPath","path","withErrorHandler","_useState3","_useState4","purchasing","setPurchasing","useEffect","purchaseHandler","history","push","disableBtn","objectSpread","burger","textAlign","Spinner","Burger","values","reduce","sum","OrderSummary","Modal","axios","Checkout","lazy","__webpack_require__","e","then","bind","Orders","Auth","Logout","withRouter","onAutoSignin","routes","Switch","Route","component","BurgerBuilder","Redirect","Layout","react","fallback","Boolean","window","location","hostname","match","initialState","building","reducer","arguments","undefined","action","JSON","parse","stringify","actionTypes","newIngs","ingredientName","updateState","setIngredient","fetchIngredientsFailed","orders","loading","purchased","newOrder","orderData","id","orderId","concat","purchaseBurgerSuccess","fetchOrdersSuccess","userId","authRedirectPath","authStart","authSuccess","authFail","authLogout","setAuthRedirectPath","logoutSaga","checkAuthTimeoutSaga","authUserSaga","authCheckStateSaga","regenerator_default","wrap","_context","prev","next","call","localStorage","put","stop","_marked","this","_context2","delay","expirationTime","_marked2","authData","method","res","expirationDate","_context3","email","password","returnSecureToken","mode","post","sent","Date","getTime","data","expiresIn","setItem","idToken","localId","t0","response","_marked3","_context4","getItem","_marked4","initIngredientsSaga","get","burgerBuilder_marked","purchaseBurgerSaga","fetchOrdersSaga","name","order_marked","queryParams","arrayOrders","order_marked2","watchAuth","watchBurgerBuilder","wathOrder","all","takeEvery","sagas_marked","sagas_marked2","takeLatest","sagas_marked3","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","sagaMiddleware","createSagaMiddleware","enhancer","composeEnhancers","compose","applyMiddleware","thunk","store","createStore","run","app","es","BrowserRouter","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","axios__WEBPACK_IMPORTED_MODULE_0__","instance","n","create","baseURL","module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","d","__webpack_exports__","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","INIT_INGREDIENTS","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","PURCHASE_BURGER","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","FETCH_ORDERS","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","AUTH_USER","AUTH_INIT_LOGOUT","AUTH_CHECK_TIMEOUT","AUTH_CHECK_STATE","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_Backdrop_module_css__WEBPACK_IMPORTED_MODULE_1__","_Backdrop_module_css__WEBPACK_IMPORTED_MODULE_1___default","backdrop","_Modal_module_css__WEBPACK_IMPORTED_MODULE_1__","_Modal_module_css__WEBPACK_IMPORTED_MODULE_1___default","_Backdrop_Backdrop__WEBPACK_IMPORTED_MODULE_2__","React","memo","transform","opacity","prevProps","nextProps","_Button_module_css__WEBPACK_IMPORTED_MODULE_1__","_Button_module_css__WEBPACK_IMPORTED_MODULE_1___default","button","disable","enable","Success","Danger","spinner","WrappedComponent","_useHttpErrorHandler","httpClient","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","err","eject","useHttpErrorHandler","_useHttpErrorHandler2","clearError","message","burgerIngredient","ingredient","arrayIngredients","ingredientKey","toConsumableArray","Array","_","i","BurgerIngredient","arr","p","setIngredients","initIngredients","purchaseBurgerFail","purchaseBurgerStart","purchaseBurger","purchaseInit","fetchOrdersFail","fetchOrdersStart","fetchOrders","logout","logoutSucceed","checkAuthTimeout","authCheckState","burgerBuilder_addIngredient","burgerBuilder_removeIngredient","burgerBuilder_initIngredients","burgerBuilder_setIngredients","burgerBuilder_fetchIngredientsFailed","order_purchaseBurger","order_purchaseInit","order_fetchOrders","order_purchaseBurgerStart","order_purchaseBurgerSuccess","order_purchaseBurgerFail","order_fetchOrdersStart","order_fetchOrdersSuccess","order_fetchOrdersFail","auth_auth","auth_logout","auth_logoutSucceed","auth_setAuthRedirectPath","auth_authCheckState","auth_authStart","auth_authSuccess","auth_authFail","auth_checkAuthTimeout"],"mappings":"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","file":"static/js/main.0366785c.chunk.js","sourcesContent":["export const updateObject = (oldObj, newProps) => {\r\n\treturn {\r\n\t\t...oldObj,\r\n\t\t...newProps\r\n\t}\r\n}\r\n\r\n// Used by contact data and auth to check form validity\r\nexport const \tcheckValidity = (value, rules) => {\r\n\tconst regExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\tif((rules.required && value.trim() == '') ||\r\n\t\t (rules.minLength && value.length < rules.minLength) ||\r\n\t\t (rules.maxLength && value.length > rules.maxLength) ||\r\n\t\t (rules.isEmail && !regExp.test(value))){\r\n\t\treturn false\r\n\t}\r\n\treturn true\r\n}","import React from 'react';\r\n\r\n// Make webpack aware of the fact that we are using this image\r\n// and webpack will then handle it with a special plugin or module\r\n// burgerLogo refers to the path where webpack stored the optimized and copied image\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css'\r\n\r\nconst logo = (props) => (\r\n\t<div className={classes.Logo}>\r\n\t\t<img src={burgerLogo} alt=\"MyBurger\"/>\r\n\t</div>\r\n)\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport classes from './NavItem.module.css'\r\n\r\nconst navItem = (props) => (\r\n\t<li className={classes.NavItem}>\r\n\t\t<NavLink \r\n\t\t\t// Passing exact key through props \r\n\t\t\t// to enable it only for certain routes (/ and not /orders)\r\n\t\t\tto={props.link} exact={props.exact}\r\n\t\t\tactiveClassName={classes.active} >\r\n\t\t\t\t{props.children}\r\n\t\t</NavLink>\r\n\t</li>\r\n)\r\n\r\nexport default navItem;","import React from 'react';\r\n\r\nimport classes from './NavItems.module.css'\r\nimport NavItem from './NavItem/NavItem'\r\n\r\nconst navItems = (props) => (\r\n\t<ul className={classes.NavItems} >\r\n\t\t<NavItem link=\"/\" exact active={true} >\r\n\t\t\tBurger Builder\r\n\t\t</NavItem>\r\n\t\t{ \r\n\t\t\tprops.isAuthenticated\r\n\t\t\t? <NavItem link=\"/orders\" active={false} >\r\n\t\t\tOrders</NavItem>\r\n\t\t\t: null\r\n\t\t}\r\n\t\t{\r\n\t\t\tprops.isAuthenticated\r\n\t\t\t\t? <NavItem link=\"/logout\" active={false} >\r\n\t\t\tLogout</NavItem>\r\n\t\t\t\t: <NavItem link=\"/auth\" active={false} >\r\n\t\t\tAuthenticate</NavItem>\r\n\t\t}\t\r\n\t</ul>\r\n)\r\n\r\nexport default navItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css'\r\n\r\nconst drawerToggle = (props) => (\r\n\t<div className={classes.DrawerToggle} onClick={props.clicked}>\r\n\t\t<div></div>\r\n\t\t<div></div>\r\n\t\t<div></div>\r\n\t</div>\r\n)\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo'\r\nimport NavItems from '../NavItems/NavItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle' \r\n\r\n// Wrap logo into a div to set different height\r\nconst toolbar = (props) => (\r\n\t<header className={classes.Toolbar} >\r\n\t\t<DrawerToggle clicked={props.clicked} />\r\n\t\t<div style={{'height': '80%'}}>\r\n\t\t\t<Logo />\r\n\t\t</div>\r\n\t\t<nav>\r\n\t\t\t<NavItems isAuthenticated={props.isAuth} />\r\n\t\t</nav>\r\n\t</header>\r\n)\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo'\r\nimport NavItems from '../NavItems/NavItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\n// Wrap logo into a div to set different height\r\nconst sideDrawer = (props) => {\r\n\t// Conditionally add classes for animations to open/close the side drawer\r\n\tlet attachedClasses = [classes.SideDrawer,classes.Close]\r\n\tif (props.open) {\r\n\t\tattachedClasses = [classes.SideDrawer, classes.Open]\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Backdrop show={props.open} clicked={props.closed} />\r\n\t\t\t<div \r\n\t\t\t\tclassName={attachedClasses.join(' ')} \r\n\t\t\t\t// When i click on the sidebar i want to close it\r\n\t\t\t\tonClick={props.closed} >\r\n\t\t\t\t<div style={{'height': '11%', 'marginBottom':'32px'}}>\r\n\t\t\t\t\t<Logo />\r\n\t\t\t\t</div>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<NavItems isAuthenticated={props.isAuth} />\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\t\r\n\t)\r\n\t\r\n}\r\n\r\nexport default sideDrawer;","import React, {Component, useState} from 'react';\r\nimport { connect } from 'react-redux' \r\n\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer' \r\n\r\n// Converted from class to functional component with react hooks\r\nconst layout = props => {\r\n\r\n\tconst [sideDrawer, setSideDrawer] = useState(false);\r\n\t// state = {\r\n\t// \tshowSideDrawer: false\r\n\t// }\r\n\r\n\tconst sideDrawerCloseHandler = () => {\r\n\t\tsetSideDrawer(false);\r\n\t\t// this.setState({ showSideDrawer: false });\r\n\t}\r\n\r\n\tconst sideDrawerToggleHandler = () => {\r\n\t\t// this.setState(prevState => (\r\n\t\t// \t{ showSideDrawer: !prevState.showSideDrawer }\r\n\t\t// ));\r\n\t\tsetSideDrawer(!sideDrawer)\r\n\t}\t\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Toolbar\r\n\t\t\t\tisAuth={props.isAuthenticated} \r\n\t\t\t\tclicked={sideDrawerToggleHandler} \r\n\t\t\t/>\r\n\t\t\t<SideDrawer \r\n\t\t\t\tisAuth={props.isAuthenticated} \r\n\t\t\t\tclosed={sideDrawerCloseHandler}\r\n\t\t\t\t// open={state.showSideDrawer}\r\n\t\t\t\topen={sideDrawer}\r\n\t\t\t/>\r\n\t\t\t<main className={classes.Content}>\r\n\t\t\t\t{ props.children }\r\n\t\t\t</main>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tisAuthenticated: state.auth.token !== null\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(layout);","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.BuildControl} >\r\n\t\t\t<div className={classes.Label} >{props.label}</div>\r\n\t\t\t<button \r\n\t\t\t\tclassName={classes.Less} \r\n\t\t\t\tonClick={() => props.removeIngredient(props.type)}\r\n\t\t\t\tdisabled={props.disabled}\r\n\t\t\t>Less</button>\r\n\t\t\t<button \r\n\t\t\t\tclassName={classes.More} \r\n\t\t\t\tonClick={() => props.addIngredient(props.type)} \r\n\t\t\t>More</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\n// Array of controls to add\r\nconst controls = [\r\n\t{ label: 'Salad', type: 'salad' },\r\n\t{ label: 'Cheese', type: 'cheese' },\r\n\t{ label: 'Meat', type: 'meat' },\r\n\t{ label: 'Bacon', type: 'bacon' }\r\n]\r\n\r\nconst buildControls = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.BuildControls} >\r\n\t\t\t<p>Current price: <strong>{props.price.toFixed(2)}</strong></p>\r\n\t\t\t{ \r\n\t\t\t\tcontrols.map(el => {\r\n\t\t\t\t\treturn <BuildControl \r\n\t\t\t\t\t\tkey={el.type}\r\n\t\t\t\t\t\tlabel={el.label} \r\n\t\t\t\t\t\ttype={el.type}\r\n\t\t\t\t\t\taddIngredient={props.addIngredient}\r\n\t\t\t\t\t\tremoveIngredient={props.removeIngredient} \r\n\t\t\t\t\t\tdisabled={props.disabled[el.type]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t<button \r\n\t\t\t\tclassName={classes.OrderButton}\r\n\t\t\t\tdisabled={!props.purchasable}\r\n\t\t\t\tonClick={props.ordered}\t\t\t\r\n\t\t\t>{props.isAuth ? 'ORDER NOW' : 'SIGNUP TO ORDER'}</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default buildControls;","import React from 'react'\r\n// import classes from './Modal.module.css'\r\n\r\nimport Button from '../../UI/Button/Button'\r\n\r\nconst orderSummary = (props) => {\r\n\t// Expected output\r\n\t// <li>Salad: 1</li>\r\n\t// <li>Bacon: 2</li>\r\n\t// <li>Cheese: 3</li>\r\n\t// <li>Meat: 1</li>\r\n\tconst ingredientSummary = Object.keys(props.ingredients)\r\n\t\t.map(igKey => {\r\n\t\t\treturn ( \r\n\t\t\t\t<li key={igKey}>\r\n\t\t\t\t\t<span style={{ textTransform: 'capitalize' }} >{igKey}</span>: \r\n\t\t\t\t\t{props.ingredients[igKey].value}\r\n\t\t\t\t</li>\r\n\t\t\t)\r\n\t\t})\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<h3>Your order</h3>\r\n\t\t\t<p>A delicious burger with the following ingredients:</p>\r\n\t\t\t<ul>\r\n\t\t\t\t{ ingredientSummary }\r\n\t\t\t</ul>\r\n\t\t\t<p><strong>Total price: {props.price.toFixed(2)}</strong></p>\r\n\t\t\t<p>Continue to checkout?</p>\r\n\t\t\t<Button \r\n\t\t\t\tbtnType=\"Danger\"\r\n\t\t\t\tclicked={props.purchaseCanceled} >\r\n\t\t\tCancel</Button>\r\n\t\t\t<Button \r\n\t\t\t\tbtnType=\"Success\"\r\n\t\t\t\tclicked={props.purchaseContinued} >\r\n\t\t\tContinue</Button>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default orderSummary;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n// Lower case because i'm not going to use it as JSX\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\n// Using the configurate instance of axios\r\nimport axios from '../../axios-orders'\r\nimport * as actions from '../../store/actions/index'\r\n\r\n// Use export to use this class into unit tests\r\n// Converted from class to functional component with react hooks\r\nexport const burgerBuilder = props => {\r\n\r\n\t// state = {\r\n\t// \t//ingredients: null,\r\n\t// \t//totalPrice: 4,\r\n\t// \t// UI state\r\n\t// \tpurchasable: false,\r\n\t// \tpurchasing: false,\r\n\t// }\r\n\tconst [purchasable, setPurchasable] = useState(false)\r\n\tconst [purchasing, setPurchasing] = useState(false)\r\n\r\n\t// Dinamically get ingredients from database\r\n\t// Moved to actions\r\n\t// componentDidMount() {\r\n\t// \t// axios.get('/ingredients.json')\r\n\t// \t// \t.then(res => {\r\n\t// \t// \t\tthis.setState({ ingredients: res.data })\r\n\t// \t// \t})\r\n\t// \t// \t.catch(e => {\r\n\t// \t// \t\tthis.setState({ error: true })\r\n\t// \t// \t})\r\n\t// \tthis.props.onInitIngredients();\r\n\t// }\r\n\t// from didMount to hooks\r\n\tuseEffect(() => {\r\n\t\tprops.onInitIngredients();\r\n\t}, [])\r\n\r\n\tconst updatePurchaseState = (ingredients) => {\r\n\t\tconst sum = Object.values(ingredients)\r\n\t\t\t.reduce((sum, el) => {\r\n\t\t\t\treturn sum + el.value;\r\n\t\t\t},0)\r\n\t\treturn sum > 0\r\n\t}\r\n\r\n\tconst purchaseHandler = (value) => {\r\n\t\tif(props.isAuthenticated)\r\n\t\t\t// this.setState({ purchasing: value })\r\n\t\t\tsetPurchasing(value)\r\n\t\telse {\r\n\t\t\t// After authentication redirect to checkout\r\n\t\t\tprops.onSetAuthRedirectPath('/checkout')\r\n\t\t\tprops.history.push('/auth')\r\n\t\t}\r\n\t}\r\n\r\n\tconst purchaseContinueHandler = () => {\r\n\t\t// Going to checkout route and passing ingredients\r\n\t\t// That will be received in the url\r\n\t\t// const queryParams = [];\r\n\t\t// for(let i in this.state.ingredients){\r\n\t\t// \tqueryParams.push(encodeURIComponent(i) + '=' +\r\n\t\t// \t\tencodeURIComponent(this.state.ingredients[i].value) + '#' +\r\n\t\t// \t\tencodeURIComponent(this.state.ingredients[i].price));\r\n\t\t// }\r\n\t\t// const queryString = queryParams.join('&');\r\n\t\t// this.props.history.push({\r\n\t\t// \tpathname: '/checkout',\r\n\t\t// \tsearch: '?'+queryString\r\n\t\t// });\r\n\t\t// Using redux i only need to go to checkout path\r\n\t\t// Right before that init purchased to false\r\n\t\tprops.onInitPurchase()\r\n\t\tprops.history.push('/checkout');\r\n\t}\r\n\r\n\r\n\t// Create an object to enable/disable remove btn\r\n\t// { salad: true, cheese: false ... }\r\n\tconst disableBtn = {\r\n\t\t...props.ings\r\n\t}\r\n\tfor(let key in disableBtn){\r\n\t\tdisableBtn[key] = disableBtn[key].value <= 0\r\n\t}\r\n\r\n\tlet orderSummary = null;\r\n\r\n\tlet burger =  !props.error ? \r\n\t\t<div style={{textAlign: 'center'}}><Spinner /></div> :\r\n\t\t<div style={{textAlign: 'center'}}><h4>Ingredients can't be loaded</h4></div>\r\n\r\n\tif(props.ings){\r\n\t\tburger = (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Burger ingredients={props.ings} />\r\n\t\t\t\t<BuildControls \r\n\t\t\t\t\taddIngredient={props.onIngredientAdded} \r\n\t\t\t\t\tremoveIngredient={props.onIngredientRemoved}\r\n\t\t\t\t\tdisabled={disableBtn} \r\n\t\t\t\t\t// Every time i render, calculate purchasable value\r\n\t\t\t\t\tpurchasable={updatePurchaseState(props.ings)}\r\n\t\t\t\t\tordered={() => purchaseHandler(true)}\r\n\t\t\t\t\tisAuth={props.isAuthenticated}\r\n\t\t\t\t\tprice={props.price}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t\torderSummary = (\r\n\t\t\t<OrderSummary \r\n\t\t\t\tingredients={props.ings} \r\n\t\t\t\tprice={props.price}\r\n\t\t\t\tpurchaseCanceled={() => purchaseHandler(false)}\r\n\t\t\t\tpurchaseContinued={purchaseContinueHandler}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Modal \r\n\t\t\t\tshow={purchasing}\r\n\t\t\t\tclicked={() => purchaseHandler(false)} >\r\n\t\t\t\t{orderSummary}\t\r\n\t\t\t</Modal>\r\n\t\t\t{ burger }\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tings: state.burgerBuilder.ingredients,\r\n\t\tprice: state.burgerBuilder.totalPrice,\r\n\t\terror: state.burgerBuilder.error,\r\n\t\tisAuthenticated: state.auth.token !== null\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n\t\tonIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n\t\tonInitIngredients: () => dispatch(actions.initIngredients()),\t\r\n\t\tonInitPurchase: () => dispatch(actions.purchaseInit()),\r\n\t\tonSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n\t}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(burgerBuilder, axios));","import React, { useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\nimport Layout from './containers/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\n// import Checkout from './containers/Checkout/Checkout'\n// import Orders from './containers/Orders/Orders'\n// import Auth from './containers/Auth/Auth'\n// import Logout from './containers/Auth/Logout/Logout'\nimport * as actions from './store/actions/index'\n\n// Lazy import\n// When using that, wrap switch and routes inside Suspence component\nconst Checkout = lazy(() => import('./containers/Checkout/Checkout'));\nconst Orders = lazy(() => import('./containers/Orders/Orders'));\nconst Auth = lazy(() => import('./containers/Auth/Auth'))\nconst Logout = lazy(() => import('./containers/Auth/Logout/Logout'))\n\n// Converted from class to functional component with react hooks\nconst app = props => {\n\n  // componentDidMount(){\n  //   this.props.onAutoSignin();\n  // }\n  // With React hooks: componentDidMount -> useEffect\n  // I want to exec this only on the first render, so i pass an empty array\n  useEffect(() => {\n    props.onAutoSignin();\n  }, [])\n\n    // Guarding routes: decide if they are enabled\n    // If a route doesn't exist redirect to home page\n    let routes = (\n        <Switch>\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Route path=\"/auth\" component={Auth} />\n          <Redirect to=\"/\" />\n        </Switch>\n    )\n    if(props.isAuthenticated){\n      routes = (\n          <Switch>\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/logout\" component={Logout} />\n            <Redirect to=\"/\" />\n          </Switch>\n      )\n    }\n\n    // Wrapping routes with Suspense because i'm using lazy components\n    // fallback prop define what to render while waiting for one of this lazy loading components to load\n    return (\n      <div className=\"\">\n        <Layout>\n          <Suspense fallback={<div>Loading...</div>}>\n            { routes }\n          </Suspense>\n        </Layout>\n      </div>\n    );\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAutoSignin: () => dispatch(actions.authCheckState())\n  }\n}\n\n// Wrapping App into connect i also need to wrap it in withRouter\n// to receive route props\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(app));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes.js';\r\nimport { updateObject } from '../../shared/utility';\r\n\r\nconst initialState = {\r\n\t// ingredients: {\r\n\t// \tbacon: { price: 0.7, value: 0 },\r\n\t// \tcheese: { price: 0.4, value: 0 },\r\n\t// \tmeat: { price: 3, value: 0 },\r\n\t// \tsalad: { price: 0.5, value: 0 }\r\n\t// },\r\n\tingredients: null,\r\n\ttotalPrice: 4,\r\n\terror: false,\r\n\t// True if i'm making a burger\r\n\tbuilding: false\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n\t// deep copy objects\r\n\tconst newIngs = JSON.parse(JSON.stringify(state.ingredients));\r\n\tnewIngs[action.ingredientName].value++;\r\n\tconst updateState = {\r\n\t\tingredients: newIngs,\r\n\t\ttotalPrice: state.totalPrice + newIngs[action.ingredientName].price,\r\n\t\tbuilding: true\r\n\t}\r\n\treturn updateObject(state, updateState);\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n\t// deep copy objects\r\n\tconst newIngs = JSON.parse(JSON.stringify(state.ingredients));\r\n\tnewIngs[action.ingredientName].value--;\r\n\tconst updateState = {\r\n\t\tingredients: newIngs,\r\n\t\ttotalPrice: state.totalPrice - newIngs[action.ingredientName].price,\r\n\t\tbuilding: true\r\n\t}\r\n\treturn updateObject(state, updateState);\r\n}\r\n\r\nconst setIngredient = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\tingredients: action.ingredients,\r\n\t\terror: false,\r\n\t\ttotalPrice: 4,\r\n\t\tbuilding: false\r\n\t})\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\terror: true\r\n\t})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\t// deep copy objects\r\n\tconst newIngs = JSON.parse(JSON.stringify(state.ingredients));\r\n\tswitch(action.type){\r\n\t\tcase actionTypes.ADD_INGREDIENT:\r\n\t\t\treturn addIngredient(state, action);\r\n\t\tcase actionTypes.REMOVE_INGREDIENT:\r\n\t\t\treturn removeIngredient(state, action);\r\n\t\tcase actionTypes.SET_INGREDIENTS:\r\n\t\t\treturn setIngredient(state, action);\r\n\t\tcase actionTypes.FETCH_INGREDIENTS_FAILED:\r\n\t\t\treturn fetchIngredientsFailed(state, action);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../../shared/utility'\r\n\r\nconst initialState = {\r\n\torders: [],\r\n\tloading: false,\r\n\tpurchased: false\r\n}\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n\t// Create new obj order adding data and id\r\n\tconst newOrder = {\r\n\t\t...action.orderData,\r\n\t\tid: action.orderId\r\n\t}\r\n\treturn updateObject(state, {\r\n\t\tloading: false,\r\n\t\tpurchased: true,\r\n\t\torders: state.orders.concat(newOrder)\r\n\t})\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\tloading: false,\r\n\t\torders: action.orders\r\n\t})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase actionTypes.PURCHASE_INIT:\r\n\t\t\treturn updateObject(state, { purchased: false })\r\n\t\tcase actionTypes.PURCHASE_BURGER_START:\r\n\t\t\treturn updateObject(state, { loading: true })\r\n\t\tcase actionTypes.PURCHASE_BURGER_SUCCESS:\r\n\t\t\treturn purchaseBurgerSuccess(state, action);\r\n\t\tcase actionTypes.PURCHASE_BURGER_FAIL:\r\n\t\t\treturn updateObject(state, { loading: false })\r\n\t\tcase actionTypes.FETCH_ORDERS_START:\r\n\t\t\treturn updateObject(state, { loading: true })\r\n\t\tcase actionTypes.FETCH_ORDERS_SUCCESS:\r\n\t\t\treturn fetchOrdersSuccess(state, action);\r\n\t\tcase actionTypes.FETCH_ORDERS_FAIL:\r\n\t\t\treturn updateObject(state, { loading: false })\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default reducer;\r\n\r\n","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../../shared/utility'\r\n\r\nconst initialState = {\r\n\ttoken: null,\r\n\tuserId: null,\r\n\terror: null,\r\n\tloading: false,\r\n\tauthRedirectPath: '/'\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n\treturn updateObject(state, { \r\n\t\terror: null, \r\n\t\tloading: true\r\n\t})\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\ttoken: action.token,\r\n\t\tuserId: action.userId,\r\n\t\terror: null,\r\n\t\tloading: false\r\n\t})\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\terror: action.error,\r\n\t\tloading: false\r\n\t})\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\ttoken: null,\r\n\t\tuserId: null\r\n\t})\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n\treturn updateObject(state, {\r\n\t\tauthRedirectPath: action.path\r\n\t})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase actionTypes.AUTH_START:\r\n\t\t\treturn authStart(state, action);\r\n\t\tcase actionTypes.AUTH_SUCCESS:\r\n\t\t\treturn authSuccess(state, action);\r\n\t\tcase actionTypes.AUTH_FAIL:\r\n\t\t\treturn authFail(state, action);\r\n\t\tcase actionTypes.AUTH_LOGOUT:\r\n\t\t\treturn authLogout(state, action);\r\n\t\tcase actionTypes.SET_AUTH_REDIRECT_PATH:\r\n\t\t\treturn setAuthRedirectPath(state, action);\r\n\t\tdefault:\r\n\t\t\treturn state;\t\r\n\t}\r\n}\r\n\r\nexport default reducer;","import {put,delay,call} from 'redux-saga/effects'\r\nimport axios from 'axios';\r\nimport * as actions from '../actions/index'\r\n\r\n// *: turns function into generator\r\n// Generator is a JS NextGen feature\r\n// Functions which can be executed incrementally\r\n// They don't run from start to end immediately, you can pause during func execution, for example to wait async code to finish\r\n// Prefex each step we exec with the yield keyword. This means i can't go ahead until this step is done\r\n// call is used to call some function on some object. The advantage is that it makes the code more testable\r\n\r\nexport function* logoutSaga(action){\r\n\tyield call([localStorage, 'removeItem'], \"token\");\r\n\tyield call([localStorage, 'removeItem'], \"expirationDate\");\r\n\tyield call([localStorage, 'removeItem'], \"userId\");\r\n\t// yield localStorage.removeItem('token');\r\n\t// yield localStorage.removeItem('expirationDate');\r\n\t// yield localStorage.removeItem('userId');\r\n\tyield put(actions.logoutSucceed());\r\n}\r\n\r\nexport function* checkAuthTimeoutSaga(action){\r\n\t// Wait for an amount of time\r\n\tyield delay(action.expirationTime * 1000);\r\n\tyield put(actions.logout());\r\n}\r\n\r\nexport function* authUserSaga(action){\r\n\tyield put(actions.authStart());\r\n\tconst authData = {\r\n\t\temail: action.email,\r\n\t\tpassword: action.password,\r\n\t\treturnSecureToken: true\r\n\t}\r\n\tconst method = action.mode === 'UP' ? 'signupNewUser' : 'verifyPassword'\r\n\ttry {\r\n\t\tconst res = yield axios.post(`https://www.googleapis.com/identitytoolkit/v3/relyingparty/${method}?key=AIzaSyCPPJUVeINZ_cK82p0wszjzwGQStn0_05w`, authData);\r\n\t\tconst expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\r\n\t\tyield localStorage.setItem('token', res.data.idToken)\r\n\t\tyield localStorage.setItem('expirationDate', expirationDate)\r\n\t\tyield localStorage.setItem('userId', res.data.localId)\r\n\t\tyield put(actions.authSuccess(res.data.idToken, res.data.localId))\r\n\t\tyield put(actions.checkAuthTimeout(res.data.expiresIn))\r\n\t} catch(e) {\r\n\t\tyield put(actions.authFail(e.response.data.error));\r\n\t}\r\n}\r\n\r\nexport function* authCheckStateSaga(action){\r\n\tconst token = localStorage.getItem('token');\r\n\tif(!token){\r\n\t\tyield put(actions.logout())\r\n\t} else {\r\n\t\tconst expirationDate = yield new Date(localStorage.getItem('expirationDate'));\r\n\t\tif(expirationDate < new Date()){\r\n\t\t\tyield put(actions.logout())\r\n\t\t} else {\r\n\t\t\tconst userId = yield localStorage.getItem('userId');\r\n\t\t\tconst expiresIn = (expirationDate.getTime() - new Date().getTime()) / 1000;\r\n\t\t\tyield put(actions.authSuccess(token, userId));\r\n\t\t\tyield put(actions.checkAuthTimeout(expiresIn));\r\n\t\t}\r\n\t}\r\n}","import {put} from 'redux-saga/effects'\r\n// Using the configurate instance of axios\r\nimport axios from '../../axios-orders'\r\nimport * as actions from '../actions/index'\r\n\r\nexport function* initIngredientsSaga(action){\r\n\ttry {\r\n\t\tconst res = yield axios.get('/ingredients.json');\r\n\t\tyield put(actions.setIngredients(res.data));\r\n\t} catch(e) {\r\n\t\tyield put(actions.fetchIngredientsFailed());\r\n\t}\r\n}","import {put} from 'redux-saga/effects'\r\n// Using the configurate instance of axios\r\nimport axios from '../../axios-orders'\r\nimport * as actions from '../actions/index'\r\n\r\nexport function* purchaseBurgerSaga(action){\r\n\tyield put(actions.purchaseBurgerStart());\r\n\ttry {\r\n\t\tconst response = yield axios.post('/orders.json?auth='+action.token, action.orderData)\r\n\t\tyield put(actions.purchaseBurgerSuccess(response.data.name, action.orderData));\r\n\t} catch(error) {\r\n\t\tyield put(actions.purchaseBurgerFail(error))\r\n\t}\r\n}\r\n\r\nexport function* fetchOrdersSaga(action){\r\n\tyield put(actions.fetchOrdersStart());\r\n\t// get orders passing auth token of logged user\r\n\t// also pass the userId to get only orders of current user\r\n\t// equalTo refers to orderBy param\r\n\t// NB: with firebase also add rule for userId to enable it as index\r\n\tconst queryParams = '?auth='+action.token+'&orderBy=\"userId\"&equalTo=\"'+action.userId+'\"'\r\n\ttry{\r\n\t\tconst res = yield axios.get('/orders.json'+queryParams)\r\n\t\t// Turns order obj into an array\r\n\t\t// distribute values to add id\r\n\t\tconst arrayOrders = [];\r\n\t\tfor(let key in res.data){\r\n\t\t\tarrayOrders.push({ \r\n\t\t\t\t...res.data[key],\r\n\t\t\t\tid: key\r\n\t\t\t});\r\n\t\t}\r\n\t\tyield put(actions.fetchOrdersSuccess(arrayOrders))\r\n\t} catch (err) {\r\n\t\tyield put(actions.fetchOrdersFail(err))\r\n\t}\r\n}","// Listen to some actions and do something when they occurs\r\n// Receive action to listen and generator to exec\r\nimport { takeEvery, all, takeLatest } from 'redux-saga/effects'\r\n// all is used to run multiple tasks simultaneously\r\n// takeLatest automatically cancels any previous saga task started previously if it's still running\r\n\r\nimport * as actionTypes from '../actions/actionTypes'\r\nimport { \r\n\tlogoutSaga, \r\n\tcheckAuthTimeoutSaga, \r\n\tauthUserSaga, \r\n\tauthCheckStateSaga \r\n} from './auth';\r\nimport {\r\n\tinitIngredientsSaga\r\n} from './burgerBuilder'\r\nimport {\r\n\tpurchaseBurgerSaga,\r\n\tfetchOrdersSaga\r\n} from './order'\r\n\r\nexport function* watchAuth() {\r\n\tyield all([\r\n\t\ttakeEvery(actionTypes.AUTH_INIT_LOGOUT, logoutSaga),\r\n\t\ttakeEvery(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeoutSaga),\r\n\t\ttakeEvery(actionTypes.AUTH_USER, authUserSaga),\r\n\t\ttakeEvery(actionTypes.AUTH_CHECK_STATE, authCheckStateSaga)\r\n\t]);\r\n\t// yield takeEvery(actionTypes.AUTH_INIT_LOGOUT, logoutSaga);\r\n\t// yield takeEvery(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeoutSaga);\r\n\t// yield takeEvery(actionTypes.AUTH_USER, authUserSaga);\r\n\t// yield takeEvery(actionTypes.AUTH_CHECK_STATE, authCheckStateSaga);\r\n}\r\n\r\nexport function* watchBurgerBuilder(){\r\n\tyield takeEvery(actionTypes.INIT_INGREDIENTS, initIngredientsSaga);\t\t\r\n}\r\n\r\nexport function* wathOrder(){\r\n\tyield takeLatest(actionTypes.PURCHASE_BURGER, purchaseBurgerSaga);\r\n\t// yield takeEvery(actionTypes.PURCHASE_BURGER, purchaseBurgerSaga);\t\t\r\n\tyield takeEvery(actionTypes.FETCH_ORDERS, fetchOrdersSaga);\t\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// Reducers\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth'\nimport { watchAuth, watchBurgerBuilder, wathOrder } from './store/sagas/index'\n\n// Combine reducers\nconst rootReducer = combineReducers({\n\tburgerBuilder: burgerBuilderReducer,\n\torders: orderReducer,\n\tauth: authReducer\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// Enable redux devTool only in development mode\n// I can do so using environment variables\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? \nwindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null\n|| compose;\n\n// Add middlewares\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk, sagaMiddleware)\n);\n\n// Create store\nconst store = createStore(rootReducer, enhancer);\nsagaMiddleware.run(watchAuth)\nsagaMiddleware.run(watchBurgerBuilder)\nsagaMiddleware.run(wathOrder)\n\n// Enable routing\n// The provider should wrap eveything\nconst app = (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'https://burger-app-2019.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2Qlkg\",\"BreadTop\":\"BurgerIngredient_BreadTop__rou_E\",\"Seeds1\":\"BurgerIngredient_Seeds1__3LBQg\",\"Seeds2\":\"BurgerIngredient_Seeds2__2FXql\",\"Meat\":\"BurgerIngredient_Meat__2c5hJ\",\"Cheese\":\"BurgerIngredient_Cheese__2tBWo\",\"Salad\":\"BurgerIngredient_Salad__Fmtyh\",\"Bacon\":\"BurgerIngredient_Bacon__1J93-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__11QaU\",\"Open\":\"SideDrawer_Open__3Sm4e\",\"Close\":\"SideDrawer_Close__PHO_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2jEC5\",\"Label\":\"BuildControl_Label__2zde6\",\"Less\":\"BuildControl_Less__1073M\",\"More\":\"BuildControl_More__1fY3M\"};","// BurgerBuilder.js\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT'\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED'\r\n// -- redux-saga actions\r\nexport const INIT_INGREDIENTS = 'INIT_INGREDIENTS'\r\n\r\n// ContactData.js\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n// -- redux-saga actions\r\nexport const PURCHASE_BURGER = 'PURCHASE_BURGER';\r\n\r\n// Order.js\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n// -- redux-saga actions\r\nexport const FETCH_ORDERS = 'FETCH_ORDERS';\r\n\r\n// Auth.js\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n// -- redux-saga actions\r\nexport const AUTH_USER = 'AUTH_USER';\r\nexport const AUTH_INIT_LOGOUT = 'AUTH_INIT_LOGOUT';\r\nexport const AUTH_CHECK_TIMEOUT = 'AUTH_CHECK_TIMEOUT';\r\nexport const AUTH_CHECK_STATE = 'AUTH_CHECK_STATE';\r\n\r\n","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst backdrop = (props) => {\r\n\treturn (\r\n\t\tprops.show ? \r\n\t\t\t<div \r\n\t\t\t\tclassName={classes.Backdrop}\r\n\t\t\t\tonClick={props.clicked}>\r\n\t\t\t</div> : null\r\n\t)\r\n}\r\n\r\nexport default backdrop","import React from 'react'\r\n\r\nimport classes from './Modal.module.css'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\n\r\n// Converted from class to functional component with react hooks\r\nconst modal = props => {\r\n\r\n\t// I want to re-render modal only when show changes\r\n\t// Until when modal is not showed i don't need to update his values\r\n\t// I also check if children changes, to show the spinner\r\n\t// shouldComponentUpdate(nextProps, nextState){\r\n\t// \treturn this.props.show !== nextProps.show\r\n\t// \t\t|| this.props.children !== nextProps.children;\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Backdrop show={props.show} clicked={props.clicked} />\r\n\t\t\t<div className={classes.Modal}\r\n\t\t\t\tstyle={{ \r\n\t\t\t\t\ttransform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n\t\t\t\t\topacity: props.show ? '1' : '0'\r\n\t\t\t\t}} >\r\n\t\t\t\t{ props.children }\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\t\r\n\t)\r\n}\r\n\r\n// shouldComponentUpdate -> React.memo\r\n// Increase performance, updating only when props of this component change\r\n// To check only for certain props, pass a second argument that is a custom function. Returns true or false to decide whether the props are equal or not. We have to return true when props are equal\r\nexport default React.memo(modal, (prevProps, nextProps) => {\r\n\treturn prevProps.show === nextProps.show\r\n\t\t\t&& prevProps.children === nextProps.children;\r\n});","import React from 'react';\r\nimport classes from './Button.module.css'\r\n\r\nconst button = (props) => {\r\n\treturn (\r\n\t\t<button \r\n\t\t\tclassName={[classes.Button,classes[props.btnType]].join(' ')}\r\n\t\t\tonClick={props.clicked} \r\n\t\t\tdisabled={props.disable} >\r\n\t\t\t{ props.children }\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem_NavItem__1qH3n\",\"active\":\"NavItem_active__1sbL5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__ybRqo\",\"OrderButton\":\"BuildControls_OrderButton__1f2K9\",\"enable\":\"BuildControls_enable__1_7Fh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2rsqd\",\"Success\":\"Button_Success__XRbsq\",\"Danger\":\"Button_Danger__2_8r9\"};","import React from 'react';\r\n\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => (\r\n\t<div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n)\r\n\r\nexport default spinner;","import React from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport useHttpErrorHandler from '../../hooks/http-error-handler'\r\n\r\n// Function that wraps a component to handle errors.\r\n// If there are error it will shows a modal\r\n// Every time we wrap an element, the class is created\r\n// and so the interceptors are created again\r\n// Having multiple interceptors attached to the same instance\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n\t// Convert from class to functional component with react hooks\r\n\treturn props => {\r\n\r\n\t\t// state = {\r\n\t\t// \terror: null\r\n\t\t// }\r\n\t\t// Using a custom hook\r\n\t\tconst [error, clearError] = useHttpErrorHandler(axios);\r\n\r\n\t\t// Intercept API calls\r\n\t\t// Using WillMount instead of DIdMount\r\n\t\t// I can register interceptors before child components are rendered\r\n\t\t// componentWillMount() {\r\n\t\t// \t// Clear any error when making a new request\r\n\t\t// \tthis.reqInterceptor = axios.interceptors.request.use(req => {\r\n\t\t// \t\tthis.setState({ error: null });\r\n\t\t// \t\treturn req;\r\n\t\t// \t})\r\n\t\t// \t// Set error when the response returns an error\r\n\t\t// \tthis.resInterceptor = axios.interceptors.response.use(res => res, err => {\r\n\t\t// \t\tthis.setState({ err });\r\n\t\t// \t})\r\n\t\t// }\r\n\r\n\r\n\t\t// to avoid errors or a lack of memory\r\n\t\t// i remove interceptors when this component is unmounted\r\n\t\t// componentWillUnmount() {\r\n\t\t// \taxios.interceptors.request.eject(this.reqInterceptor)\r\n\t\t// \taxios.interceptors.response.eject(this.resInterceptor)\r\n\t\t// }\r\n\r\n\t\t// CLear any error\r\n\t\t// const errorConfirmedHandler = () => {\r\n\t\t// \tthis.setState({ error: null })\r\n\t\t// }\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Modal \r\n\t\t\t\t\tshow={error}\r\n\t\t\t\t\tclicked={clearError}\r\n\t\t\t\t>\r\n\t\t\t\t\t{ error ? error.message : null }\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<WrappedComponent {...props} />\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default withErrorHandler;","import { useState, useEffect } from 'react';\r\n\r\nexport default httpClient => {\r\n\r\n\t\tconst [error, setError] = useState(null);\r\n\r\n\t\t// Clear any error when making a new request\r\n\t\tconst reqInterceptor = httpClient.interceptors.request.use(req => {\r\n\t\t\tsetError(null)\r\n\t\t\treturn req;\r\n\t\t})\r\n\t\t// Set error when the response returns an error\r\n\t\tconst resInterceptor = httpClient.interceptors.response.use(res => res, err => {\r\n\t\t\tsetError(err)\r\n\t\t})\r\n\r\n\t\t// return the cleanup function\r\n\t\t// To run on onmounting, pass empty array. This will never change and therefore react will run the main content when component mounts and cleanup when it unmounts. Eventually we can pass interceptors to cleanup whenever they change\r\n\t\tuseEffect(() => {\r\n\t\t\treturn () => {\r\n\t\t\t\thttpClient.interceptors.request.eject(reqInterceptor)\r\n\t\t\t\thttpClient.interceptors.response.eject(resInterceptor)\r\n\t\t\t}\r\n\t\t}, [reqInterceptor, resInterceptor])\r\n\r\n\t\t// CLear any error\r\n\t\tconst errorConfirmedHandler = () => {\r\n\t\t\t// this.setState({ error: null })\r\n\t\t\tsetError(null)\r\n\t\t}\r\n\r\n\t\t// Return error obj and a function that allows us to clean this error\r\n\t\treturn [error, errorConfirmedHandler];\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css'\r\n\r\n// Converted from class to functional component with react hooks\r\nconst burgerIngredient = props => {\r\n\r\n\tlet ingredient = null;\r\n\t\r\n\tswitch(props.type) {\r\n\t\tcase 'bread-bottom':\r\n\t\t\tingredient = <div className={classes.BreadBottom}></div>\r\n\t\t\tbreak;\r\n\t\tcase 'bread-top':\r\n\t\t\tingredient = (\r\n\t\t\t\t<div className={classes.BreadTop} >\r\n\t\t\t\t\t<div className={classes.Seeds1} ></div>\r\n\t\t\t\t\t<div className={classes.Seeds2} ></div>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t\tbreak;\r\n\t\tcase 'meat':\r\n\t\t\tingredient = <div className={classes.Meat} ></div>\r\n\t\t\tbreak;\t\t\r\n\t\tcase 'cheese':\r\n\t\t\tingredient = <div className={classes.Cheese} ></div>\r\n\t\t\tbreak;\r\n\t\tcase 'salad':\r\n\t\t\tingredient = <div className={classes.Salad} ></div>\r\n\t\t\tbreak;\r\n\t\tcase 'bacon':\r\n\t\t\tingredient = <div className={classes.Bacon} ></div>\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tingredient = null;\r\n\t}\r\n\r\n\treturn ingredient;\r\n\r\n}\r\n\r\nburgerIngredient.propTypes = {\r\n\ttype: PropTypes.string.isRequired\r\n}\r\n\r\nexport default burgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst burger = (props) => {\r\n\t// Transform an object of keys value pairs into an array\r\n\tlet arrayIngredients = Object.keys(props.ingredients)\r\n\t\t.map(ingredientKey => {\r\n\t\t\treturn [...Array(props.ingredients[ingredientKey].value)]\r\n\t\t\t\t.map((_, i) => {\r\n\t\t\t\t\treturn <BurgerIngredient \r\n\t\t\t\t\t\t\t\t\t\tkey={ingredientKey+i} \r\n\t\t\t\t\t\t\t\t\t\ttype={ingredientKey} />\r\n\t\t\t\t})\r\n\t\t})\r\n\t\t// transform array into something else\r\n\t\t// Accept a callback function and an initial value\r\n\t\t// Doing so, i remove empty arrays for ingredients not added\r\n\t\t// es. [[],[],['meat'],[]] becames ['meat']\r\n\t\t.reduce((arr, el) => {\r\n\t\t\treturn arr.concat(el)\r\n\t\t},[])\r\n\t\t\r\n\tif(arrayIngredients.length === 0){\r\n\t\tarrayIngredients = <p>Please start adding ingredients</p>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.Burger}>\r\n\t\t\t<BurgerIngredient type=\"bread-top\" />\r\n\t\t\t{ arrayIngredients }\r\n\t\t\t<BurgerIngredient type=\"bread-bottom\" />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__FseU-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__26hcZ\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2uBIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems_NavItems__svayN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3S7Cb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1emhx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__20o8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2T09F\"};","// Action creator types\r\nimport * as actionTypes from './actionTypes'\r\n// Using the configurate instance of axios\r\nimport axios from '../../axios-orders'\r\n\r\nexport const addIngredient = (ingName) => {\r\n\treturn { \r\n\t\ttype: actionTypes.ADD_INGREDIENT,\r\n\t\tingredientName: ingName\r\n\t}\r\n}\r\n\r\nexport const removeIngredient = (ingName) => {\r\n\treturn { \r\n\t\ttype: actionTypes.REMOVE_INGREDIENT,\r\n\t\tingredientName: ingName\r\n\t}\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n\treturn {\r\n\t\ttype: actionTypes.SET_INGREDIENTS,\r\n\t\tingredients: ingredients\r\n\t}\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n\t}\r\n}\r\n\r\nexport const initIngredients = () => {\r\n\t// return dispatch => {\r\n\t// \taxios.get('/ingredients.json')\r\n\t// \t\t.then(res => {\r\n\t// \t\t\tdispatch(setIngredients(res.data));\r\n\t// \t\t})\r\n\t// \t\t.catch(e => {\r\n\t// \t\t\tdispatch(fetchIngredientsFailed());\r\n\t// \t\t})\r\n\t// }\r\n\treturn {\r\n\t\ttype: actionTypes.INIT_INGREDIENTS\r\n\t}\r\n}","// Action creator types\r\nimport * as actionTypes from './actionTypes'\r\n// Using the configurate instance of axios\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n\treturn {\r\n\t\ttype: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n\t\torderId: id,\r\n\t\torderData: orderData\r\n\t}\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n\treturn {\r\n\t\ttype: actionTypes.PURCHASE_BURGER_FAIL,\r\n\t\terror: error\r\n\t}\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.PURCHASE_BURGER_START\r\n\t}\r\n}\r\n\r\n// action dispatched once we click order button\r\n// Moved on saga\r\nexport const purchaseBurger = (orderData, token) => {\r\n\treturn {\r\n\t\ttype: actionTypes.PURCHASE_BURGER,\r\n\t\torderData: orderData,\r\n\t\ttoken: token\r\n\t}\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.PURCHASE_INIT\r\n\t}\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n\treturn {\r\n\t\ttype: actionTypes.FETCH_ORDERS_SUCCESS,\r\n\t\torders: orders\r\n\t}\r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n\treturn {\t\r\n\t\ttype: actionTypes.FETCH_ORDERS_FAIL,\r\n\t\terror: error\r\n\t}\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.FETCH_ORDERS_START\r\n\t}\r\n}\r\n\r\n// Moved on saga\r\nexport const fetchOrders = (token,userId) => {\r\n\t// return dispatch => {\r\n\t// \tdispatch(fetchOrdersStart())\r\n\t// \t// get orders passing auth token of logged user\r\n\t// \t// also pass the userId to get only orders of current user\r\n\t// \t// equalTo refers to orderBy param\r\n\t// \t// NB: with firebase also add rule for userId to enable it as index\r\n\t// \tconst queryParams = '?auth='+token+'&orderBy=\"userId\"&equalTo=\"'+userId+'\"'\r\n\t// \taxios.get('/orders.json'+queryParams)\r\n\t// \t\t.then(res => {\r\n\t// \t\t\t// Turns order obj into an array\r\n\t// \t\t\t// distribute values to add id\r\n\t// \t\t\tconst arrayOrders = [];\r\n\t// \t\t\tfor(let key in res.data){\r\n\t// \t\t\t\tarrayOrders.push({ \r\n\t// \t\t\t\t\t...res.data[key],\r\n\t// \t\t\t\t\tid: key\r\n\t// \t\t\t\t});\r\n\t// \t\t\t}\r\n\t// \t\t\tdispatch(fetchOrdersSuccess(arrayOrders))\r\n\t// \t\t})\r\n\t// \t\t.catch(err => {\r\n\t// \t\t\tdispatch(fetchOrdersFail(err))\r\n\t// \t\t})\r\n\t// }\r\n\treturn {\r\n\t\ttype: actionTypes.FETCH_ORDERS,\r\n\t\ttoken: token,\r\n\t\tuserId: userId\r\n\t}\r\n}\r\n\r\n","import * as actionTypes from './actionTypes'\r\n// import axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_START\r\n\t}\r\n}\r\n\r\nexport const authSuccess = (idToken, localId) => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_SUCCESS,\r\n\t\ttoken: idToken,\r\n\t\tuserId: localId\r\n\t}\r\n}\r\n\r\nexport const authFail = error => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_FAIL,\r\n\t\terror: error\r\n\t}\r\n}\r\n\r\n// Replace with saga, to manage side effects\r\nexport const logout = () => {\r\n\t// localStorage.removeItem('token');\r\n\t// localStorage.removeItem('expirationDate');\r\n\t// localStorage.removeItem('userId');\r\n\t// return {\r\n\t// \ttype: actionTypes.AUTH_LOGOUT\r\n\t// }\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_INIT_LOGOUT\r\n\t}\r\n}\r\n\r\nexport const logoutSucceed = () => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_LOGOUT\r\n\t}\r\n}\r\n\r\n// When token time expires i logout automatically\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_CHECK_TIMEOUT,\r\n\t\texpirationTime: expirationTime\r\n\t}\r\n}\r\n\r\n// mode\r\n// UP: signup (register new user)\r\n// IN: signin (login)\r\nexport const auth = (email, password, mode) => {\r\n\t// return dispatch => {\r\n\t// \tdispatch(authStart());\r\n\t// \tconst authData = {\r\n\t// \t\temail: email,\r\n\t// \t\tpassword: password,\r\n\t// \t\treturnSecureToken: true\r\n\t// \t}\r\n\t// \tconst method = mode === 'UP' ? 'signupNewUser' : 'verifyPassword'\r\n\t// \taxios.post(`https://www.googleapis.com/identitytoolkit/v3/relyingparty/${method}?key=AIzaSyCPPJUVeINZ_cK82p0wszjzwGQStn0_05w`, authData)\r\n\t// \t\t.then(res => {\r\n\t// \t\t\t// Save user login data on browser\r\n\t// \t\t\t// To stay loggen also when reloading the page\r\n\t// \t\t\tconst expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\r\n\t// \t\t\tlocalStorage.setItem('token', res.data.idToken)\r\n\t// \t\t\tlocalStorage.setItem('expirationDate', expirationDate)\r\n\t// \t\t\tlocalStorage.setItem('userId', res.data.localId)\r\n\t// \t\t\tdispatch(authSuccess(res.data.idToken, res.data.localId))\r\n\t// \t\t\tdispatch(checkAuthTimeout(res.data.expiresIn))\r\n\t// \t\t})\r\n\t// \t\t.catch(e => {\r\n\t// \t\t\tconsole.log(e);\r\n\t// \t\t\tdispatch(authFail(e.response.data.error))\r\n\t// \t\t})\r\n\t// }\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_USER,\r\n\t\temail: email,\r\n\t\tpassword: password,\r\n\t\tmode: mode\r\n\t}\r\n}\r\n\r\n// path for redirect to burger builder or checkout\r\nexport const setAuthRedirectPath = (path) => {\r\n\treturn {\r\n\t\ttype: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n\t\tpath: path\r\n\t}\r\n}\r\n\r\n// Function used when loading the app, to auto login\r\nexport const authCheckState = () => {\r\n\t// return dispatch => {\r\n\t// \tconst token = localStorage.getItem('token');\r\n\t// \tif(!token){\r\n\t// \t\tdispatch(logout())\r\n\t// \t} else {\r\n\t// \t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n\t// \t\tif(expirationDate < new Date()){\r\n\t// \t\t\tdispatch(logout());\r\n\t// \t\t} else {\r\n\t// \t\t\tconst userId = localStorage.getItem('userId');\r\n\t// \t\t\tconst expiresIn = (expirationDate.getTime() - new Date().getTime()) / 1000;\r\n\t// \t\t\tdispatch(authSuccess(token, userId));\r\n\t// \t\t\tdispatch(checkAuthTimeout(expiresIn));\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\treturn {\r\n\t\ttype: actionTypes.AUTH_CHECK_STATE\r\n\t}\r\n}","// Group all my exports into one single file\r\nexport {\r\n\taddIngredient,\r\n\tremoveIngredient,\r\n\tinitIngredients,\r\n\t// used by redux saga\r\n\tsetIngredients,\r\n\tfetchIngredientsFailed\r\n} from './burgerBuilder'\r\n\r\nexport {\r\n\tpurchaseBurger,\r\n\tpurchaseInit,\r\n\tfetchOrders,\r\n\t// used by redux saga\r\n\tpurchaseBurgerStart,\r\n\tpurchaseBurgerSuccess,\r\n\tpurchaseBurgerFail,\r\n\tfetchOrdersStart,\r\n\tfetchOrdersSuccess,\r\n\tfetchOrdersFail\t\r\n} from './order'\r\n\r\nexport {\r\n\tauth,\r\n\tlogout,\r\n\tlogoutSucceed,\r\n\tsetAuthRedirectPath,\r\n\tauthCheckState,\r\n\t// used by redux saga\r\n\tauthStart,\r\n\tauthSuccess,\r\n\tauthFail,\r\n\tcheckAuthTimeout\r\n} from './auth'"],"sourceRoot":""}